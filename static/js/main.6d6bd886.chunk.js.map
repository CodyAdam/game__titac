{"version":3,"sources":["features/board/Lines.module.css","features/board/Board.module.css","app/hooks.ts","features/board/boardSlice.ts","features/board/Control.tsx","features/board/Lines.tsx","features/board/Board.tsx","features/board/Score.tsx","App.tsx","app/store.ts","index.tsx"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","score","p1","p2","turn","Math","random","winner","grid","slotsIndex","value","boardSlice","createSlice","name","reducers","playAt","state","action","cell","payload","player","push","used","indices","forEach","lineFound","tiles","index","found","tile","find","item","getLine","console","log","i","length","setUsed","getScoreGrid","getWinner","reset","actions","selectGrid","board","present","getSymbol","Control","dispatch","canUndo","past","canRedo","future","className","styles","controlBar","controlButton","onClick","ActionCreators","undo","disabled","controlButtonInside","controlButtonContainer","redo","H","W","COEF","Lines","lines","sorted","tr","pt1","pt2","values","mr","br","lc","mc","rc","bltr","brtl","line","sortLines","canvasRef","useRef","useEffect","current","c","getContext","clearRect","Object","keys","dir","x1","y1","x2","y2","elem","beginPath","moveTo","lineWidth","strokeStyle","lineTo","closePath","stroke","ref","canvas","height","width","Board","header","winning","map","items","subIndex","notfull","under","upper","inside","container","subHeader","Score","props","scoreContainer","scoreHeader","App","store","configureStore","reducer","undoable","boardReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d6bd886.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Lines_canvas__1RhWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__3oCBK\",\"subHeader\":\"Board_subHeader__2vlcY\",\"header\":\"Board_header__2zZ7H\",\"winning\":\"Board_winning__2Y2Qf\",\"grid\":\"Board_grid__3MhkQ\",\"cell\":\"Board_cell__jnqxD\",\"notfull\":\"Board_notfull__3HcYN\",\"upper\":\"Board_upper__2nrU2\",\"under\":\"Board_under__1MxW4\",\"inside\":\"Board_inside__Of-hs\",\"item\":\"Board_item__3uMko\",\"used\":\"Board_used__3NNlD\",\"controlBar\":\"Board_controlBar__cXbsP\",\"controlButton\":\"Board_controlButton__e9Ixo\",\"controlButtonInside\":\"Board_controlButtonInside__2oSfO\",\"scoreContainer\":\"Board_scoreContainer__QMybD\",\"scoreHeader\":\"Board_scoreHeader__3Q6RO\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../../app/store';\r\nimport { Direction } from './Lines';\r\n\r\nexport interface BoardState {\r\n  score: { p1: Array<Direction>, p2: Array<Direction> }\r\n  turn: 1 | 2\r\n  winner: false | 1 | 2\r\n  grid: Array<Tile>\r\n}\r\n\r\nexport interface Tile {\r\n  slotsIndex: number,\r\n  value: Array<Item>\r\n}\r\n\r\nexport interface Item { used: boolean, player: 1 | 2 }\r\n\r\nconst MAX_PER_TILE = 3;\r\nconst SCORE_TO_WIN = 3;\r\n\r\nconst initialState: BoardState = {\r\n  score: { p1: [], p2: [] },\r\n  turn: Math.random() < 0.5 ? 1 : 2,\r\n  winner: false,\r\n  grid: [\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n    { slotsIndex: 0, value: [] },\r\n  ]\r\n}\r\n\r\nexport const boardSlice = createSlice({\r\n  name: 'board',\r\n  initialState,\r\n  reducers: {\r\n    playAt: (state, action: PayloadAction<number>) => {\r\n      const cell = action.payload;\r\n      const player = state.turn;\r\n      if (state.grid[cell].slotsIndex < MAX_PER_TILE) {\r\n        state.grid[cell].slotsIndex++;\r\n        state.grid[cell].value.push({ used: false, player });\r\n        state.turn = player === 1 ? 2 : 1;\r\n        const { score, grid } = getScoreGrid(state);\r\n        state.score = score;\r\n        state.grid = grid;\r\n        state.winner = getWinner(state);\r\n      }\r\n    },\r\n    reset: (state, action: PayloadAction<1 | 2>) => {\r\n      state = { ...initialState }\r\n      state.turn = action.payload;\r\n      return state\r\n    }\r\n  }\r\n});\r\n\r\nexport const { playAt, reset } = boardSlice.actions;\r\n\r\nexport const selectGrid = (state: RootState) => state.board.present.grid;\r\n\r\nexport default boardSlice.reducer;\r\n\r\n// HELPERS\r\n\r\nfunction getScoreGrid(state: BoardState): { score: { p1: Array<Direction>, p2: Array<Direction> }, grid: Array<Tile> } {\r\n  const p1: Array<Direction> = state.score.p1;\r\n  const p2: Array<Direction> = state.score.p2;\r\n  let grid = state.grid;\r\n\r\n  const lines: Array<{ name: Direction, indices: Array<number> }> = [{ name: \"tr\", indices: [0, 1, 2] },\r\n  { name: \"mr\", indices: [3, 4, 5] },\r\n  { name: \"br\", indices: [6, 7, 8] },\r\n  { name: \"lc\", indices: [0, 3, 6] },\r\n  { name: \"mc\", indices: [1, 4, 7] },\r\n  { name: \"rc\", indices: [2, 5, 8] },\r\n  { name: \"brtl\", indices: [0, 4, 8] },\r\n  { name: \"bltr\", indices: [6, 4, 2] }\r\n  ];\r\n\r\n  lines.forEach(({ name, indices }) => {\r\n    const lineFound = getLine(grid, indices);\r\n    if (lineFound) {\r\n      grid = setUsed(grid, indices, lineFound);\r\n      if (lineFound === 1)\r\n        p1.push(name);\r\n      else p2.push(name)\r\n    }\r\n  })\r\n  return { score: { p1, p2 }, grid };\r\n}\r\nfunction setUsed(grid: Array<Tile>, indices: Array<number>, player: 1 | 2): Array<Tile> {\r\n  console.log(\"SetUsed Called\");\r\n\r\n  indices.forEach(index => {\r\n    for (let i = 0; i < grid[index].value.length; i++) {\r\n      const item = grid[index].value[i];\r\n      if (item.player === player && !item.used) {\r\n        console.log(\"         Used set to true at : \" + index + \"  \" + i);\r\n\r\n        grid[index].value[i].used = true\r\n        break;\r\n      }\r\n    }\r\n  })\r\n  return grid;\r\n}\r\n\r\nfunction getLine(grid: Array<Tile>, indices: Array<number>,): false | 1 | 2 {\r\n  const tiles: Array<Tile> = []\r\n  indices.forEach(index => tiles.push(grid[index]));\r\n\r\n  //check 1\r\n  let found = true;\r\n  tiles.forEach((tile) => {\r\n    if (tile.slotsIndex === 0) found = false;\r\n\r\n    if (!tile.value.find((item) => !item.used && item.player === 1))\r\n      found = false;\r\n  })\r\n  if (found) return 1;\r\n\r\n  //check 2\r\n  found = true;\r\n  tiles.forEach((tile) => {\r\n    if (tile.slotsIndex === 0) found = false;\r\n\r\n    if (!tile.value.find((item) => !item.used && item.player === 2))\r\n      found = false;\r\n  })\r\n  if (found) return 2;\r\n\r\n\r\n  return false;\r\n}\r\n\r\nfunction getWinner(state: BoardState): false | 1 | 2 {\r\n  if (state.score.p1.length >= SCORE_TO_WIN)\r\n    return 1;\r\n  else if (state.score.p2.length >= SCORE_TO_WIN)\r\n    return 2\r\n  else return false;\r\n}\r\n\r\nexport function getSymbol(player: 1 | 2): string {\r\n  if (player === 1) return '🟡';\r\n  else if (player === 2) return '🔵';\r\n  else return '?';\r\n}","import React from 'react';\r\nimport styles from './Board.module.css';\r\nimport { ActionCreators } from 'redux-undo';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { reset } from './boardSlice';\r\n\r\nexport function Control() {\r\n    const dispatch = useAppDispatch();\r\n    const canUndo: boolean = useAppSelector((state) => state.board.past.length > 0);\r\n    const canRedo: boolean = useAppSelector((state) => state.board.future.length > 0);\r\n    return (\r\n        <div className={styles.controlBar}>\r\n            <button\r\n                className={styles.controlButton}\r\n                onClick={() => dispatch(ActionCreators.undo())}\r\n                disabled={!canUndo}\r\n            >\r\n                <div className={styles.controlButtonInside}>undo</div>\r\n            </button>\r\n            <div className={styles.controlButtonContainer}>\r\n                <button\r\n                    className={styles.controlButton}\r\n                    onClick={() => dispatch(ActionCreators.redo())}\r\n                    disabled={!canRedo}\r\n                >\r\n                    <div className={styles.controlButtonInside}>redo</div>\r\n                </button>\r\n            </div>\r\n            <div className={styles.controlButtonContainer}>\r\n                <button className={styles.controlButton} onClick={() => dispatch(reset(Math.random() > 0.5 ? 1 : 2))}>\r\n                    <div className={styles.controlButtonInside}>reset</div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport styles from './Lines.module.css';\r\n\r\nconst H = 1000;\r\nconst W = 1000;\r\n\r\nexport type Direction = 'tr' | 'mr' | 'br' | 'lc' | 'mc' | 'rc' | 'brtl' | 'bltr';\r\n\r\ninterface DirectionLines {\r\n  tr: { pt1: [-1, -1]; pt2: [1, -1]; values: Array<1 | 2> };\r\n  mr: { pt1: [-1, 0]; pt2: [1, 0]; values: Array<1 | 2> };\r\n  br: { pt1: [-1, 1]; pt2: [1, 1]; values: Array<1 | 2> };\r\n  lc: { pt1: [-1, -1]; pt2: [-1, 1]; values: Array<1 | 2> };\r\n  mc: { pt1: [0, -1]; pt2: [0, 1]; values: Array<1 | 2> };\r\n  rc: { pt1: [1, -1]; pt2: [1, 1]; values: Array<1 | 2> };\r\n  bltr: { pt1: [-1, 1]; pt2: [1, -1]; values: Array<1 | 2> };\r\n  brtl: { pt1: [-1, -1]; pt2: [1, 1]; values: Array<1 | 2> };\r\n}\r\n\r\nconst COEF: number = 365;\r\nfunction sortLines(p1: Array<Direction>, p2: Array<Direction>): DirectionLines {\r\n  const sorted: DirectionLines = {\r\n    tr: { pt1: [-1, -1], pt2: [1, -1], values: [] },\r\n    mr: { pt1: [-1, 0], pt2: [1, 0], values: [] },\r\n    br: { pt1: [-1, 1], pt2: [1, 1], values: [] },\r\n    lc: { pt1: [-1, -1], pt2: [-1, 1], values: [] },\r\n    mc: { pt1: [0, -1], pt2: [0, 1], values: [] },\r\n    rc: { pt1: [1, -1], pt2: [1, 1], values: [] },\r\n    bltr: { pt1: [-1, 1], pt2: [1, -1], values: [] },\r\n    brtl: { pt1: [-1, -1], pt2: [1, 1], values: [] },\r\n  };\r\n\r\n  p1.forEach((line: Direction) => {\r\n    sorted[line].values.push(1);\r\n  });\r\n  p2.forEach((line: Direction) => {\r\n    sorted[line].values.push(2);\r\n  });\r\n  return sorted;\r\n}\r\n\r\nexport function Lines() {\r\n  const p1 = useAppSelector((state) => state.board.present.score.p1);\r\n  const p2 = useAppSelector((state) => state.board.present.score.p2);\r\n  const lines = sortLines(p1, p2);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    const c = canvas.getContext('2d');\r\n    if (!c) return;\r\n    c.clearRect(0, 0, H, W);\r\n\r\n    Object.keys(lines).forEach((dir): void => {\r\n      const { pt1, pt2, values } = lines[dir as Direction];\r\n      let [x1, y1] = pt1 as Array<number>;\r\n      let [x2, y2] = pt2 as Array<number>;\r\n      [x1, y1, x2, y2] = [x1 * COEF + W / 2, y1 * COEF + H / 2, x2 * COEF + W / 2, y2 * COEF + H / 2];\r\n\r\n      const delta = 40;\r\n\r\n      values.forEach((elem, index) => {\r\n        c.beginPath();\r\n        c.moveTo(\r\n          x1 + (index - (values.length === 1 ? 0 : 1)) * delta * (dir === 'brtl' ? -1 : 1),\r\n          y1 + (index - (values.length === 1 ? 0 : 1)) * delta,\r\n        );\r\n        c.lineWidth = 30;\r\n        c.strokeStyle = elem === 1 ? '#FFF100' : '#0078D7';\r\n        c.lineTo(\r\n          x2 + (index - (values.length === 1 ? 0 : 1)) * delta * (dir === 'brtl' ? -1 : 1),\r\n          y2 + (index - (values.length === 1 ? 0 : 1)) * delta,\r\n        );\r\n        c.closePath();\r\n        c.stroke();\r\n      });\r\n    });\r\n  });\r\n  return <canvas ref={canvasRef} className={styles.canvas} height={H} width={W} />;\r\n}\r\n","import React from 'react';\r\nimport styles from './Board.module.css';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { selectGrid, Tile, playAt, getSymbol } from './boardSlice';\r\nimport { Control } from './Control';\r\nimport { Lines } from './Lines';\r\n\r\nexport function Board() {\r\n  const dispatch = useAppDispatch();\r\n  const grid = useAppSelector(selectGrid);\r\n  const turn = useAppSelector((state) => state.board.present.turn);\r\n  const winner = useAppSelector((state) => state.board.present.winner);\r\n\r\n  const header = winner ? (\r\n    <h1 className={styles.header + ' ' + styles.winning}> Winner is {getSymbol(winner)}</h1>\r\n  ) : turn === 1 ? (\r\n    <h1 className={styles.header}>Player {getSymbol(1)} turn</h1>\r\n  ) : (\r\n    <h1 className={styles.header}>Player {getSymbol(2)} turn</h1>\r\n  );\r\n\r\n  const tiles = grid.map((tile: Tile, index: number) => {\r\n    const items = tile.value.map((item, subIndex) => (\r\n      <div className={styles.item + ' ' + (item.used ? styles.used : '')} key={index + subIndex}>\r\n        {getSymbol(item.player)}\r\n      </div>\r\n    ));\r\n    return (\r\n      <div\r\n        key={index}\r\n        className={styles.cell + ' ' + (tile.value.length < 3 ? styles.notfull : '')}\r\n        onClick={() => {\r\n          if (!winner) dispatch(playAt(index));\r\n        }}\r\n      >\r\n        <div className={styles.under}></div>\r\n        <div className={styles.upper}>\r\n          <div className={styles.inside}>{items}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.subHeader}>Make 3 lines to win</div>\r\n      {header}\r\n      <div className={styles.grid}>\r\n        <Lines />\r\n        {tiles}\r\n      </div>\r\n      <Control />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { getSymbol } from './boardSlice';\r\nimport styles from './Board.module.css';\r\n\r\nexport function Score(props: { player: 1 | 2 }) {\r\n    const score = useAppSelector((state) =>\r\n        props.player === 1 ? state.board.present.score.p1.length : state.board.present.score.p2.length,\r\n    );\r\n\r\n    return (\r\n        <div className={styles.scoreContainer}>\r\n            <div className={styles.scoreHeader}>{getSymbol(props.player)}</div>\r\n            <div className={styles.scoreHeader}>{score}</div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Board } from './features/board/Board';\nimport { Score } from './features/board/Score';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Score player={1} />\n            <Board />\n            <Score player={2} />\n        </div>\n    );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport boardReducer from '../features/board/boardSlice';\nimport undoable from 'redux-undo';\n\nexport const store = configureStore({\n  reducer: {\n    board: undoable(boardReducer),\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}